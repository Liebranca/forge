#!/usr/bin/perl
# ---   *   ---   *   ---
# ANVIL
# For striking metal
#
# LIBRE SOFTWARE
# Licensed under GNU GPL3
# be a bro and inherit
#
# CONTRIBUTORS
# lyeb,

# ---   *   ---   *   ---
# deps

package anvil;

  use v5.36.0;
  use strict;
  use warnings;

  use English qw(-no_match_words);

  use lib $ENV{ARPATH}.'/lib/sys/';

  use Style;
  use Chk;
  use Tree;

  use lib $ENV{ARPATH}.'/forge/';

  use A9M;

  use anvil::l0;
  use anvil::l1;
  use anvil::l2;
  use Arstd::xd;

# ---   *   ---   *   ---
# info

  our $VERSION = v0.00.3;#b
  our $AUTHOR  = 'IBN-3DILA';

# ---   *   ---   *   ---
# cstruc

sub new($class,%O) {

  my $l1        = $NULLSTR;

  my $l2_frame  = Tree->new_frame();
  my $l2        = $l2_frame->new(undef,'$');


  my $self=bless {

    l0 => $NULLSTR,
    l1 => $NULLSTR,
    l2 => $l2,

    anchor => undef,
    nest   => [],

    status => 0x00,

  },$class;

  return $self;

};

# ---   *   ---   *   ---
# procs a codestr from file or raw

sub read($self,$src) {

  my $codestr=$NULLSTR;

  if(is_filepath($src)) {
    $A9M->{parse}->{fname}="'$src'";
    $codestr=orc($src);

  } else {
    $A9M->{parse}->{fname}='($codestr)';
    $codestr=$src;

  };


  anvil::l0::read($self,$codestr);

  xd($A9M->{out});

};

# ---   *   ---   *   ---
# test

my $ice=anvil->new();
$ice->read(q[

public seg base;
  load ar,$20;

]);

# ---   *   ---   *   ---
